{"ast":null,"code":"import { auth, googleAuthProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* googleSignInSaga() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleAuthProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* emailSignInSaga({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignIn() {\n  yield takeLatest('GOOGLE_SIGN_IN_START', googleSignInSaga);\n}\nexport function* onEmailSignIn() {\n  yield takeLatest('EMAIL_SIGN_IN_START', emailSignInSaga);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn)]);\n}","map":{"version":3,"sources":["/Users/kennethchung/develop/clothing-store-app/src/redux/user/user.sagas.js"],"names":["auth","googleAuthProvider","createUserProfileDocument","call","put","takeLatest","all","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","googleSignInSaga","user","signInWithPopup","emailSignInSaga","payload","email","password","signInWithEmailAndPassword","onGoogleSignIn","onEmailSignIn","userSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,kBAAf,EAAmCC,yBAAnC,QAAoE,+BAApE;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AAC/D,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACD,yBAAD,EAA4BQ,QAA5B,EAAsCC,cAAtC,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMV,GAAG,CAACG,aAAa,CAAC;AACpBQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AAEpB,SAAGF,YAAY,CAACG,IAAb;AAFiB,KAAD,CAAd,CAAT;AAIH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACI,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACoB,eAAL,CAAqBnB,kBAArB,CAAvB;AACA,UAAMQ,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACI,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAC/D,MAAI;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACyB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMf,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACI,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUS,cAAV,GAA2B;AAC9B,QAAMrB,UAAU,CAAC,sBAAD,EAAyBa,gBAAzB,CAAhB;AACH;AAED,OAAO,UAAUS,aAAV,GAA0B;AAC7B,QAAMtB,UAAU,CAAC,qBAAD,EAAwBgB,eAAxB,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAsB;AACzB,QAAMtB,GAAG,CAAC,CACNH,IAAI,CAACuB,cAAD,CADE,EAENvB,IAAI,CAACwB,aAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { auth, googleAuthProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure } from \"./user.actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}  \n\nexport function* googleSignInSaga() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleAuthProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* emailSignInSaga({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user); \n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* onGoogleSignIn() {\n    yield takeLatest('GOOGLE_SIGN_IN_START', googleSignInSaga);\n}\n\nexport function* onEmailSignIn() {\n    yield takeLatest('EMAIL_SIGN_IN_START', emailSignInSaga);\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignIn),\n        call(onEmailSignIn)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}