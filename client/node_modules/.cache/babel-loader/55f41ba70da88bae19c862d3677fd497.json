{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAb1uyyW06AqTf18CqncngPAloZfMStEjc\",\n  authDomain: \"kc-clothing-store.firebaseapp.com\",\n  databaseURL: \"https://kc-clothing-store.firebaseio.com\",\n  projectId: \"kc-clothing-store\",\n  storageBucket: \"kc-clothing-store.appspot.com\",\n  messagingSenderId: \"966999910162\",\n  appId: \"1:966999910162:web:3b79df06bdb299651eb5cb\",\n  measurementId: \"G-QWDT62CRRF\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); // Creates a new document in the users collection \n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userSnapshot = await userRef.get();\n\n  if (!userSnapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt: new Date(),\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; // Adds the given items to the firestore collection\n\nexport const addItems = async (collectionName, items) => {\n  const collectionRef = firestore.collection(collectionName);\n  const batch = firestore.batch();\n  items.forEach(item => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, item);\n  });\n  return await batch.commit();\n};\nexport const fetchShopData = async () => {\n  const querySnapshot = await firestore.collection('storeCollections').get();\n  const transformedData = querySnapshot.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      id: doc.id,\n      title,\n      items,\n      routeName: encodeURI(title).toLowerCase()\n    };\n  });\n  console.log(transformedData);\n  return transformedData.reduce((hashTable, current) => {\n    hashTable[current.title.toLowerCase()] = current;\n    return hashTable;\n  }, {});\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/kennethchung/develop/clothing-store-app/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","userSnapshot","get","exists","displayName","email","set","createdAt","Date","error","console","log","message","addItems","collectionName","items","collectionRef","collection","batch","forEach","item","newDocRef","commit","fetchShopData","querySnapshot","transformedData","docs","map","title","data","id","routeName","encodeURI","toLowerCase","reduce","hashTable","current"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAb1uyyW06AqTf18CqncngPAloZfMStEjc\",\n    authDomain: \"kc-clothing-store.firebaseapp.com\",\n    databaseURL: \"https://kc-clothing-store.firebaseio.com\",\n    projectId: \"kc-clothing-store\",\n    storageBucket: \"kc-clothing-store.appspot.com\",\n    messagingSenderId: \"966999910162\",\n    appId: \"1:966999910162:web:3b79df06bdb299651eb5cb\",\n    measurementId: \"G-QWDT62CRRF\"\n};\n  \n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// Creates a new document in the users collection \nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) {\n        return;\n    }\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const userSnapshot = await userRef.get();\n    if (!userSnapshot.exists) {\n        const { displayName, email } = userAuth;\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt: new Date(),\n                ...additionalData\n            });\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n}\n\n\n// Adds the given items to the firestore collection\nexport const addItems = async (collectionName, items) => {\n    const collectionRef = firestore.collection(collectionName);\n    const batch = firestore.batch();\n    items.forEach(item => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, item);\n    });\n\n    return await batch.commit();\n}\n\nexport const fetchShopData = async () => {\n    const querySnapshot = await firestore.collection('storeCollections').get();\n    const transformedData = querySnapshot.docs.map( doc => {\n        const { title, items } = doc.data();\n        return {\n            id: doc.id,\n            title,\n            items,\n            routeName: encodeURI(title).toLowerCase()\n        };\n    });\n\n    console.log(transformedData);\n    return transformedData.reduce( (hashTable, current) => {\n        hashTable[current.title.toLowerCase()] = current;\n        return hashTable;\n    }, {});\n}\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}