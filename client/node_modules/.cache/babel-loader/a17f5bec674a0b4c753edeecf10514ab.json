{"ast":null,"code":"import { takeLatest, put } from 'redux-saga/effects';\nimport { fetchShopDataSuccess, fetchShopDataFailure } from './shop.actions';\n\nfunction* fetchShopDataAsync() {\n  try {\n    const querySnapshot = yield firestore.collection('storeCollections').get();\n    let transformedData = querySnapshot.docs.map(doc => {\n      const {\n        title,\n        items\n      } = doc.data();\n      return {\n        id: doc.id,\n        title,\n        items,\n        routeName: encodeURI(title).toLowerCase()\n      };\n    });\n    transformedData = transformedData.reduce((hashTable, current) => {\n      hashTable[current.title.toLowerCase()] = current;\n      return hashTable;\n    }, {});\n    yield put(fetchShopDataSuccess(transformedData));\n  } catch (error) {\n    yield put(fetchShopDataFailure(error.message));\n  }\n}\n\nexport function* fetchShopData() {\n  yield takeLatest('FETCH_SHOP_DATA_START', fetchShopDataAsync);\n}","map":{"version":3,"sources":["/Users/kennethchung/develop/clothing-store-app/src/redux/shop/shop.sagas.js"],"names":["takeLatest","put","fetchShopDataSuccess","fetchShopDataFailure","fetchShopDataAsync","querySnapshot","firestore","collection","get","transformedData","docs","map","doc","title","items","data","id","routeName","encodeURI","toLowerCase","reduce","hashTable","current","error","message","fetchShopData"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,QAA8B,oBAA9B;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,gBAA3D;;AAEA,UAAUC,kBAAV,GAA+B;AAC3B,MAAI;AACA,UAAMC,aAAa,GAAG,MAAMC,SAAS,CAACC,UAAV,CAAqB,kBAArB,EAAyCC,GAAzC,EAA5B;AACA,QAAIC,eAAe,GAAGJ,aAAa,CAACK,IAAd,CAAmBC,GAAnB,CAAwBC,GAAG,IAAI;AACjD,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAmBF,GAAG,CAACG,IAAJ,EAAzB;AACA,aAAO;AACHC,QAAAA,EAAE,EAAEJ,GAAG,CAACI,EADL;AAEHH,QAAAA,KAFG;AAGHC,QAAAA,KAHG;AAIHG,QAAAA,SAAS,EAAEC,SAAS,CAACL,KAAD,CAAT,CAAiBM,WAAjB;AAJR,OAAP;AAMH,KARqB,CAAtB;AAUAV,IAAAA,eAAe,GAAGA,eAAe,CAACW,MAAhB,CAAwB,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AAC9DD,MAAAA,SAAS,CAACC,OAAO,CAACT,KAAR,CAAcM,WAAd,EAAD,CAAT,GAAyCG,OAAzC;AACA,aAAOD,SAAP;AACH,KAHiB,EAGf,EAHe,CAAlB;AAKA,UAAMpB,GAAG,CAACC,oBAAoB,CAACO,eAAD,CAArB,CAAT;AAEH,GAnBD,CAmBE,OAAOc,KAAP,EAAc;AACZ,UAAMtB,GAAG,CAACE,oBAAoB,CAACoB,KAAK,CAACC,OAAP,CAArB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,aAAV,GAA0B;AAC7B,QAAMzB,UAAU,CAAC,uBAAD,EAA0BI,kBAA1B,CAAhB;AACH","sourcesContent":["import {takeLatest, put} from 'redux-saga/effects'; \nimport { fetchShopDataSuccess, fetchShopDataFailure } from './shop.actions';\n\nfunction* fetchShopDataAsync() {\n    try {\n        const querySnapshot = yield firestore.collection('storeCollections').get();\n        let transformedData = querySnapshot.docs.map( doc => {\n            const { title, items } = doc.data();\n            return {\n                id: doc.id,\n                title,\n                items,\n                routeName: encodeURI(title).toLowerCase()\n            };\n        });\n\n        transformedData = transformedData.reduce( (hashTable, current) => {\n            hashTable[current.title.toLowerCase()] = current;\n            return hashTable;\n        }, {});\n\n        yield put(fetchShopDataSuccess(transformedData));\n        \n    } catch (error) {\n        yield put(fetchShopDataFailure(error.message));\n    }\n}\n\nexport function* fetchShopData() {\n    yield takeLatest('FETCH_SHOP_DATA_START', fetchShopDataAsync);\n} "]},"metadata":{},"sourceType":"module"}