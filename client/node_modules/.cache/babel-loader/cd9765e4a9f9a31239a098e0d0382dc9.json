{"ast":null,"code":"import { auth, googleAuthProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, registerSuccess, registerFailure } from \"./user.actions\";\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* googleSignInSaga() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleAuthProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* emailSignInSaga({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticatedSaga() {\n  try {\n    const user = yield getCurrentUser();\n\n    if (!user) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signOutSaga() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* registerUserSaga({\n  email,\n  password,\n  displayName\n}) {\n  try {\n    const userCred = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(registerSuccess({\n      user: userCred.user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(registerFailure(error));\n  }\n}\n\nfunction* signInAfterRegister({\n  user,\n  additionalData\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nfunction* onGoogleSignIn() {\n  yield takeLatest('GOOGLE_SIGN_IN_START', googleSignInSaga);\n}\n\nfunction* onEmailSignIn() {\n  yield takeLatest('EMAIL_SIGN_IN_START', emailSignInSaga);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest('CHECK_USER_SESSION', isUserAuthenticatedSaga);\n}\n\nfunction* onSignOut() {\n  yield takeLatest('SIGN_OUT_START', signOutSaga);\n}\n\nfunction* onRegister() {\n  yield takeLatest('REGISTER_USER_START', registerUserSaga);\n}\n\nfunction* onRegisterSuccess() {\n  yield takeLatest('REGISTER_USER_SUCCESS', signInAfterRegister);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn), call(onCheckUserSession), call(onSignOut), call(onRegister), call(onRegisterSuccess)]);\n}","map":{"version":3,"sources":["/Users/kennethchung/develop/clothing-store-app/src/redux/user/user.sagas.js"],"names":["auth","googleAuthProvider","createUserProfileDocument","getCurrentUser","call","put","takeLatest","all","signInSuccess","signInFailure","signOutSuccess","signOutFailure","registerSuccess","registerFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","googleSignInSaga","user","signInWithPopup","emailSignInSaga","payload","email","password","signInWithEmailAndPassword","isUserAuthenticatedSaga","signOutSaga","signOut","registerUserSaga","displayName","userCred","createUserWithEmailAndPassword","signInAfterRegister","onGoogleSignIn","onEmailSignIn","onCheckUserSession","onSignOut","onRegister","onRegisterSuccess","userSagas"],"mappings":"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","sourcesContent":["import { auth, googleAuthProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, registerSuccess, registerFailure } from \"./user.actions\";\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}  \n\nfunction* googleSignInSaga() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleAuthProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nfunction* emailSignInSaga({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user); \n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nfunction* isUserAuthenticatedSaga() {\n    try {\n        const user = yield getCurrentUser();\n        if (!user) {\n            return;\n        }\n\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nfunction* signOutSaga() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nfunction* registerUserSaga({ email, password, displayName }) {\n    try {\n        const userCred = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(registerSuccess({\n            user: userCred.user,\n            additionalData: { displayName }\n        }));\n    } catch (error) {\n        yield put(registerFailure(error));\n    }\n}\n\nfunction* signInAfterRegister({ user, additionalData }) {\n    yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nfunction* onGoogleSignIn() {\n    yield takeLatest('GOOGLE_SIGN_IN_START', googleSignInSaga);\n}\n\nfunction* onEmailSignIn() {\n    yield takeLatest('EMAIL_SIGN_IN_START', emailSignInSaga);\n}\n\nfunction* onCheckUserSession() {\n    yield takeLatest('CHECK_USER_SESSION', isUserAuthenticatedSaga);\n}\n\nfunction* onSignOut() {\n    yield takeLatest('SIGN_OUT_START', signOutSaga);\n}\n\nfunction* onRegister() {\n    yield takeLatest('REGISTER_USER_START', registerUserSaga);\n}\n\nfunction* onRegisterSuccess() {\n    yield takeLatest('REGISTER_USER_SUCCESS', signInAfterRegister);\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignIn),\n        call(onEmailSignIn),\n        call (onCheckUserSession),\n        call(onSignOut),\n        call(onRegister),\n        call(onRegisterSuccess)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}