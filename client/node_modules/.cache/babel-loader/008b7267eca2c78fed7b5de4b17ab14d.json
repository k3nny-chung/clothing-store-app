{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAb1uyyW06AqTf18CqncngPAloZfMStEjc\",\n  authDomain: \"kc-clothing-store.firebaseapp.com\",\n  databaseURL: \"https://kc-clothing-store.firebaseio.com\",\n  projectId: \"kc-clothing-store\",\n  storageBucket: \"kc-clothing-store.appspot.com\",\n  messagingSenderId: \"966999910162\",\n  appId: \"1:966999910162:web:3b79df06bdb299651eb5cb\",\n  measurementId: \"G-QWDT62CRRF\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userSnapshot = await userRef.get();\n\n  if (!userSnapshot) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt: new Date(),\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/kennethchung/develop/clothing-store-app/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","userSnapshot","get","displayName","email","set","createdAt","Date","error","console","log","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,mCAFK;AAGjBC,EAAAA,WAAW,EAAE,0CAHI;AAIjBC,EAAAA,SAAS,EAAE,mBAJM;AAKjBC,EAAAA,aAAa,EAAE,+BALE;AAMjBC,EAAAA,iBAAiB,EAAE,cANF;AAOjBC,EAAAA,KAAK,EAAE,2CAPU;AAQjBC,EAAAA,aAAa,EAAE;AARE,CAArB,C,CAWA;;AACAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACW,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AAEP,OAAO,MAAMM,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACX;AACH;;AAED,QAAME,OAAO,GAAGV,SAAS,CAACW,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,YAAY,GAAG,MAAMH,OAAO,CAACI,GAAR,EAA3B;;AACA,MAAI,CAACD,YAAL,EAAmB;AACf,UAAM;AAAEE,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBR,QAA/B;;AACA,QAAI;AACA,YAAME,OAAO,CAACO,GAAR,CAAY;AACdF,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdE,QAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHG;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOW,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOb,OAAP;AACH,CAtBM;AAwBP,eAAetB,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAb1uyyW06AqTf18CqncngPAloZfMStEjc\",\n    authDomain: \"kc-clothing-store.firebaseapp.com\",\n    databaseURL: \"https://kc-clothing-store.firebaseio.com\",\n    projectId: \"kc-clothing-store\",\n    storageBucket: \"kc-clothing-store.appspot.com\",\n    messagingSenderId: \"966999910162\",\n    appId: \"1:966999910162:web:3b79df06bdb299651eb5cb\",\n    measurementId: \"G-QWDT62CRRF\"\n};\n  \n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) {\n        return;\n    }\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const userSnapshot = await userRef.get();\n    if (!userSnapshot) {\n        const { displayName, email } = userAuth;\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt: new Date(),\n                ...additionalData\n            });\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n}\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}