{"ast":null,"code":"import { auth, googleAuthProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* googleSignInSaga() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleAuthProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* emailSignInSaga({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticatedSaga() {\n  try {\n    const user = yield getCurrentUser();\n\n    if (!user) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signOutSaga() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* onGoogleSignIn() {\n  yield takeLatest('GOOGLE_SIGN_IN_START', googleSignInSaga);\n}\n\nfunction* onEmailSignIn() {\n  yield takeLatest('EMAIL_SIGN_IN_START', emailSignInSaga);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest('CHECK_USER_SESSION', isUserAuthenticatedSaga);\n}\n\nfunction* onSignOut() {\n  yield takeLatest('SIGN_OUT_START', signOutSaga);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignIn), call(onEmailSignIn), call(onCheckUserSession), call(onSignOut)]);\n}","map":{"version":3,"sources":["/Users/kennethchung/develop/clothing-store-app/src/redux/user/user.sagas.js"],"names":["auth","googleAuthProvider","createUserProfileDocument","getCurrentUser","call","put","takeLatest","all","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","googleSignInSaga","user","signInWithPopup","emailSignInSaga","payload","email","password","signInWithEmailAndPassword","isUserAuthenticatedSaga","signOutSaga","signOut","onGoogleSignIn","onEmailSignIn","onCheckUserSession","onSignOut","userSagas"],"mappings":"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","sourcesContent":["import { auth, googleAuthProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\n\nfunction* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}  \n\nfunction* googleSignInSaga() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleAuthProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nfunction* emailSignInSaga({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user); \n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nfunction* isUserAuthenticatedSaga() {\n    try {\n        const user = yield getCurrentUser();\n        if (!user) {\n            return;\n        }\n\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nfunction* signOutSaga() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nfunction* onGoogleSignIn() {\n    yield takeLatest('GOOGLE_SIGN_IN_START', googleSignInSaga);\n}\n\nfunction* onEmailSignIn() {\n    yield takeLatest('EMAIL_SIGN_IN_START', emailSignInSaga);\n}\n\nfunction* onCheckUserSession() {\n    yield takeLatest('CHECK_USER_SESSION', isUserAuthenticatedSaga);\n}\n\nfunction* onSignOut() {\n    yield takeLatest('SIGN_OUT_START', signOutSaga);\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignIn),\n        call(onEmailSignIn),\n        call (onCheckUserSession),\n        call(onSignOut)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}